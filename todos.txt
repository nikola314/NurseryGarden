+ Authentication
  + Login form: username instead of email
  + Registration form - 2 forms
  + Password checking using regex
  + Change information sent and recieved
  + Prettier navigation
  + Change password
  + Capatcha
  + Dont allow login if not approved


+ Admin
  + User list
  + Approve users
  + Create users
  + Delete users
  + Edit users

+ Routing - '/' different things for different users

- Farmer
  + His nursery gardens list view
  - passing query parameters for list view
  + Create garden
  + Dashboard for specific nursery garden
  + Inc/Dec temperature and water
  + Plan grid
  + Popover on every plant
  + Applying products on plants
  + Planting plants
  + Taking out finished plants and setting timePlanted to that time and plant to null
  + updating slots
  + Sorting and filtering in warehouse
  + Orders tab in garden
  + Fetch orders when fetching garden
    + Sort orders
  + Add condition if plant==null && current time-slot.timePlanted > DAY
  + Display garden name/location
  + plant images ( progress dependent )
  - Notification (garden needs attention)
  + Bind (populate) product to slot so product.time is accessible for progress
  + Calculate plant progress
  + Create some products, orders, companies to test
  + Slot model
  + Nursery garden model
  + One warhouse for every nursery garden
  + Product model
  + Product service
  + Order model
  + Fix ExpressionChangedAfterItHasBeenCheckedError -> https://stackoverflow.com/questions/39787038/how-to-manage-angular2-expression-has-changed-after-it-was-checked-exception-w

- Modify cron job to run more often


- Online store
  + Ordered and delivered
  - Cancel orders
  + Cart
!!!  - decrease number of available products after they're ordered
    - if order is rejected return to available


+ Server-side workers to reduce the amount of water and temperature (node cron jobs - bookmarked)

- Company:
  + add products manually
    + Dialog with stepper
    + Add to database (create or update depending on whether it already exists)
    + Update products
  + add products via JSON
  - checkOwner middleware on backend
  + change products model to have quantity
  + product service
    + backend for requests
  + Products list page
  + Order list page
  + Accept or reject orders
  + Sending orders
    + google distance API
    + 5 employees
  + when delivery is picked up set up a cron job to execute upon arrival and add products to garden
  - company statistics
  + CART

+ Delivery - transfer order to warehouse
        + Add to garden storage (warehouse) on delivery

    + backend-order.js isOrderedByUser
    + front - comment div if can comment


    - STYLING WHEN EVERYTHING WORKS
      -comments on product-details page

- occupied on garden list page


distance api key: AIzaSyBX68PfCfs6tuA0FETqRIt5INrWpcjEtcY


mongodb+srv://nikola314:KZg5JvUbhvOnXsR3@cluster0-unpq0.mongodb.net/test


mongoexport --host "Cluster0-shard-0/cluster0-shard-00-00-unpq0.mongodb.net:27017,cluster0-shard-00-01-unpq0.mongodb.net:27017,cluster0-shard-00-02-unpq0.mongodb.net:27017" --ssl --username nikola314 --password KZg5JvUbhvOnXsR3 --authenticationDatabase admin --db test --collection users --type json --out users
